name: PR Release Check

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check_release_trigger:
    name: Check if PR will trigger a Release
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.detect_version_change.outputs.version_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Detect version change
        id: detect_version_change
        uses: ./.github/actions/detect-version-change

  update_pr_comment:
    name: Update PR Comment
    runs-on: ubuntu-latest
    needs: check_release_trigger
    if: ${{ needs.check_release_trigger.outputs.version_changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Commitizen
        run: pip install commitizen
      - name: Add "release" label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: release
      - name: Get new version
        id: version
        run: echo "VERSION=$(cz version -p)" >> $GITHUB_ENV
      - name: Extract Changelog Entry
        id: changelog
        run: echo "CHANGELOG_CONTENT=$(cz ch ${{ env.version }})" >> $GITHUB_ENV
      - name: Comment on PR if release will be triggered
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ **This PR will trigger a new release upon merge!** 🚀

            ## 📢 Planned version: v${{ env.VERSION }}

            🔍 **Changelog for the new version:**
            ```markdown
            ${{ env.CHANGELOG_CONTENT }}
            ```
          edit-mode: replace
