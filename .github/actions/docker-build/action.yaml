name: "Docker CLI Build"
description: "Build and optionally push Docker CLI image with provenance support"
inputs:
  version:
    description: "Version to tag the image with (optional)"
    required: false
  commit:
    description: "Commit hash to include in build args"
    required: false
    default: ${{ github.sha }}
  push:
    description: "Whether to push the image to registry"
    required: false
    default: "false"
  tags:
    description: "Additional tags to apply to the image (comma-separated)"
    required: false
    default: ""
  platforms:
    description: "Platforms to build for (comma-separated)"
    required: false
    default: "linux/amd64,linux/arm64"
runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/cli
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          ${{ inputs.tags != '' && format('type=raw,value={0}', inputs.tags) || '' }}
          ${{ inputs.version != '' && format('type=raw,value=v{0}', inputs.version) || '' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./cmd/cli.dockerfile
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          version=${{ inputs.version || 'unknown' }}
          commit=${{ inputs.commit }}
        provenance: true
        sbom: true
        platforms: ${{ inputs.platforms }}
